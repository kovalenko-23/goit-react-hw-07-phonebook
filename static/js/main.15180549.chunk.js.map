{"version":3,"sources":["Components/ContactsForm/ContactsForm.styled.jsx","redux/ContactSlice.jsx","Components/ContactsForm/ContactsForm.jsx","Components/ContactsItem/ContactsItem.styled.jsx","Components/ContactsItem/ContactsItem.jsx","Components/ContactList/ContactList.styled.jsx","redux/phonebook/phonebook-selectors.jsx","Components/ContactList/ContactsList.jsx","Components/ContactsFilter/ContactsFilter.styled.jsx","redux/phonebook/phoonebook-actions.jsx","Components/ContactsFilter/ContactsFilter.jsx","App.js","reportWebVitals.js","redux/phonebook/phonebook-reducer.jsx","redux/store.js","index.js"],"names":["Form","styled","form","Label","label","props","bottom","Input","input","ButtonAdd","button","contactsApi","createApi","reducerPath","tagTypes","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","body","name","number","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","ContactsForm","useState","setName","setNumber","contacts","data","handleInputChange","event","currentTarget","value","resetSate","onSubmit","preventDefault","contactsNamesArr","map","contact","includes","toast","error","success","autoComplete","type","onChange","pattern","title","required","Contact","li","ContactItem","p","DeleteContactBtn","ContactsItem","id","onDeleteButton","onClick","List","ul","getFilter","state","phoneBook","filter","ContactsList","useSelector","visibleContacts","toLowerCase","Wrapper","div","Filterlabel","FilterInput","actions","changeFilter","createAction","ContactsFilter","dispatch","useDispatch","e","phoonebookActions","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","payload","combineReducers","store","configureStore","reducer","PhoneBookReducer","middleware","getDefaultMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAEaA,EAAOC,IAAOC,KAAV,8HAOJC,EAAQF,IAAOG,MAAV,qIAIC,SAACC,GAAD,OAAYA,EAAMC,OAAS,OAAS,SAG1CC,EAAQN,IAAOO,MAAV,iDAILC,EAAYR,IAAOS,OAAV,qH,eClBTC,EAAcC,YAAU,CACnCC,YAAa,cACbC,SAAU,CAAC,YACXC,UAAWC,YAAe,CACxBC,QAAS,iDAEXC,UAAW,SAAAC,GAAO,MAAK,CACrBC,cAAeD,EAAQE,MAAM,CAC3BA,MAAO,iBAAM,aACbC,aAAc,CAAC,cAEjBC,cAAeJ,EAAQK,SAAS,CAC9BH,MAAO,SAAAI,GAAS,MAAK,CACnBC,IAAI,aAAD,OAAeD,GAClBE,OAAQ,WAEVC,gBAAiB,CAAC,cAEpBC,cAAeV,EAAQK,SAAS,CAC9BH,MAAO,kBAAuB,CAC5BK,IAAK,YACLC,OAAQ,OACRG,KAAM,CAAEC,KAHH,EAAGA,KAGMC,OAHT,EAASA,UAKhBJ,gBAAiB,CAAC,kBAMtBK,EAGEtB,EAHFsB,sBACAC,EAEEvB,EAFFuB,yBACAC,EACExB,EADFwB,yB,OC6CaC,I,gBAAAA,EAvER,WACL,MAAwBC,mBAAS,IAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOL,EAAP,KAAeO,EAAf,KACcC,EAAaP,IAAnBQ,KACR,EAAwBN,IAAjBN,EAAP,oBAEMa,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,cAAtBb,EAAR,EAAQA,KAAMc,EAAd,EAAcA,MACd,OAAQd,GACN,IAAK,OACHO,EAAQO,GACR,MACF,IAAK,SACHN,EAAUM,GACV,MACF,QACE,SAiBAC,EAAY,WAChBR,EAAQ,IACRC,EAAU,KAGZ,OACE,eAACvC,EAAD,CAAM+C,SAnBa,SAAAJ,GACnBA,EAAMK,iBAEN,IAAMC,EAAmBT,EAASU,KAAI,SAAAC,GAAO,OAAIA,EAAQpB,QACrDS,IAAa,IAAMS,EAAiBG,SAASrB,GAC/CsB,IAAMC,MAAN,2BAAgCvB,EAAhC,wBAGFF,EAAc,CAAEE,OAAMC,WACtBqB,IAAME,QAAN,UAAiBxB,EAAjB,6BACAe,MASA,UACE,eAAC3C,EAAD,kBAEE,cAACI,EAAD,CACEiD,aAAa,MACbC,KAAK,OACL1B,KAAK,OACLc,MAAOd,EACP2B,SAAUhB,EACViB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,eAAC1D,EAAD,CAAOG,QAAM,EAAb,mBAEE,cAACC,EAAD,CACEiD,aAAa,MACbC,KAAK,MACL1B,KAAK,SACLc,MAAOb,EACP0B,SAAUhB,EACViB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,cAACpD,EAAD,CAAWgD,KAAK,SAAhB,iCCxEOK,EAAU7D,IAAO8D,GAAV,6LAUPC,EAAc/D,IAAOgE,EAAV,gEAIXC,EAAmBjE,IAAOS,OAAV,sECDdyD,EAZM,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,GAAIrC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,OAAQqC,EAAqB,EAArBA,eACxC,OACE,eAACP,EAAD,CAASM,GAAIA,EAAb,UACE,eAACJ,EAAD,WAAcjC,EAAd,OACA,cAACiC,EAAD,UAAchC,IACd,cAACkC,EAAD,CAAkBT,KAAK,SAASa,QAAS,kBAAMD,EAAeD,IAA9D,wBCNOG,EAAOtE,IAAOuE,GAAV,gICFJC,EAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,QCsDnCC,EAzCM,WACnB,IAAcrC,EAAaP,IAAnBQ,KACR,EAAwBP,IAAjBX,EAAP,oBACMqD,EAASE,YAAYL,GAKvBM,EAAkB,KActB,OAXOvC,IAILuC,EAAkBvC,EAASoC,QAAO,SAAAzB,GAAO,OACvCA,EAAQpB,KAAKiD,cAAc5B,SAASwB,OAOtC,mCACGpC,GACC,cAAC+B,EAAD,UACGQ,EAAgB7B,KAAI,gBAAGkB,EAAH,EAAGA,GAAIrC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACnB,cAAC,EAAD,CAEEoC,GAAIA,EACJrC,KAAMA,EACNC,OAAQA,EACRqC,eAAgB9C,GAJX6C,WCvCNa,EAAUhF,IAAOiF,IAAV,oDAGPC,EAAclF,IAAOG,MAAV,gGAKXgF,EAAcnF,IAAOO,MAAV,iD,OCJT6E,EAFC,CAAEC,aAFGC,YAAa,2BCwBnBC,EArBQ,WACrB,IAAMZ,EAASE,YAAYL,GACrBgB,EAAWC,cAEjB,OACE,cAACT,EAAD,UACE,eAACE,EAAD,kBAEE,cAACC,EAAD,CACE3B,KAAK,OACL1B,KAAK,UACLc,MAAO+B,EACPlB,SAAU,SAAAiC,GAAC,OACTF,EAASG,EAAkBN,aAAaK,EAAE/C,cAAcC,iBCZ9DoC,EAAUhF,IAAOiF,IAAV,wHAoBEW,MAbR,WACL,OACE,eAAC,EAAD,WACE,cAAC,IAAD,IACA,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,QCTSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCHRnB,GAAS2B,YAAc,GAAD,eACzBlB,EAAQC,cAAe,SAACZ,EAAD,YAAU8B,YAGrBC,gBAAgB,CAC7B7B,YCLW8B,GAAQC,YAAe,CAClCC,QAAQ,aACNjC,UAAWkC,IACVlG,EAAYE,YAAcF,EAAYiG,SAEzCE,WAAY,SAAAC,GAAoB,4BAC3BA,KAD2B,CAE9BpG,EAAYmG,gBCFhBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SAEE,cAAC,EAAD,QAIJS,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.15180549.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: inline-flex;\n  flex-direction: column;\n  padding: 20px;\n  border: 1px solid black;\n`;\n\nexport const Label = styled.label`\n  display: inline-flex;\n  justify-content: space-between;\n  font-weight: bold;\n  margin-bottom: ${(props) => (props.bottom ? \"20px\" : \"8px\")};\n`;\n\nexport const Input = styled.input`\n  margin-left: 6px;\n`;\n\nexport const ButtonAdd = styled.button`\n  height: 30px;\n  font-weight: bold;\n  font-size: 16px;\n  background-color: #c1f3d9;\n`;\n","import { fetchBaseQuery, createApi } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: 'contactsApi',\r\n  tagTypes: ['Contacts'],\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://618005cf8bfae60017adf950.mockapi.io/',\r\n  }),\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => '/contacts',\r\n      providesTags: ['Contacts'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: contactId => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contacts'],\r\n    }),\r\n    createContact: builder.mutation({\r\n      query: ({ name, number }) => ({\r\n        url: '/contacts',\r\n        method: 'POST',\r\n        body: { name, number },\r\n      }),\r\n      invalidatesTags: ['Contacts'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useCreateContactMutation,\r\n} = contactsApi;\r\n","import { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { Form, Label, Input, ButtonAdd } from './ContactsForm.styled';\nimport {\n  useFetchContactsQuery,\n  useCreateContactMutation,\n} from '../../redux/ContactSlice';\n\nexport function ContactsForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { data: contacts } = useFetchContactsQuery();\n  const [createContact] = useCreateContactMutation();\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const contactsNamesArr = contacts.map(contact => contact.name);\n    if (contacts !== [] && contactsNamesArr.includes(name)) {\n      toast.error(`You already have ${name} in your contacts!`);\n      return;\n    }\n    createContact({ name, number });\n    toast.success(`${name} added to your contacts!`);\n    resetSate();\n  };\n\n  const resetSate = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          autoComplete=\"off\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n      <Label bottom>\n        Number\n        <Input\n          autoComplete=\"off\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </Label>\n      <ButtonAdd type=\"submit\">Add to contacts</ButtonAdd>\n    </Form>\n  );\n}\n\nexport default ContactsForm;\n","import styled from \"@emotion/styled\";\n\nexport const Contact = styled.li`\n  display: inline-flex;\n  justify-content: space-between;\n  width: 300px;\n  margin-bottom: 20px;\n  padding: 10px;\n  font-size: 15px;\n  border: 1px solid;\n`;\n\nexport const ContactItem = styled.p`\n  margin: 0;\n  margin-right: 6px;\n`;\nexport const DeleteContactBtn = styled.button`\n  font-size: 12px;\n  font-weight: bold;\n`;\n","import { Contact, ContactItem, DeleteContactBtn } from './ContactsItem.styled';\nimport PropTypes from 'prop-types';\n\nconst ContactsItem = ({ id, name, number, onDeleteButton }) => {\n  return (\n    <Contact id={id}>\n      <ContactItem>{name}:</ContactItem>\n      <ContactItem>{number}</ContactItem>\n      <DeleteContactBtn type=\"button\" onClick={() => onDeleteButton(id)}>\n        Delete\n      </DeleteContactBtn>\n    </Contact>\n  );\n};\n\nexport default ContactsItem;\n\nContactsItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteButton: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n`;\n","export const getFilter = state => state.phoneBook.filter;\r\n","import { useSelector } from 'react-redux';\nimport ContactsItem from '../ContactsItem/ContactsItem';\nimport { List } from './ContactList.styled';\nimport {\n  useFetchContactsQuery,\n  useDeleteContactMutation,\n} from '../../redux/ContactSlice';\n// import phoonebookActions from '../../redux/phonebook/phoonebook-actions';\nimport {\n  // getContacts,\n  getFilter,\n} from '../../redux/phonebook/phonebook-selectors';\n\nconst ContactsList = () => {\n  const { data: contacts } = useFetchContactsQuery();\n  const [deleteContact] = useDeleteContactMutation();\n  const filter = useSelector(getFilter);\n  // const dispatch = useDispatch();\n  // const deleteContact = (id, name) =>\n  //   dispatch(phoonebookActions.deleteContact(id, name));\n\n  let visibleContacts = null;\n\n  const getVisibleContacts = () => {\n    if (!contacts) {\n      return;\n    }\n\n    visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter),\n    );\n  };\n\n  getVisibleContacts();\n\n  return (\n    <>\n      {contacts && (\n        <List>\n          {visibleContacts.map(({ id, name, number }) => (\n            <ContactsItem\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n              onDeleteButton={deleteContact}\n            />\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default ContactsList;\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  margin-bottom: 30px;\n`;\nexport const Filterlabel = styled.label`\n  padding: 15px;\n  border: 1px solid black;\n  font-weight: bold;\n`;\nexport const FilterInput = styled.input`\n  margin-left: 8px;\n`;\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst changeFilter = createAction('phonebook/handleFinder');\r\n\r\nconst actions = { changeFilter };\r\n\r\nexport default actions;\r\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Wrapper, Filterlabel, FilterInput } from './ContactsFilter.styled';\nimport phoonebookActions from '../../redux/phonebook/phoonebook-actions';\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\n\nconst ContactsFilter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <Wrapper>\n      <Filterlabel>\n        Find\n        <FilterInput\n          type=\"text\"\n          name=\"message\"\n          value={filter}\n          onChange={e =>\n            dispatch(phoonebookActions.changeFilter(e.currentTarget.value))\n          }\n        />\n      </Filterlabel>\n    </Wrapper>\n  );\n};\n\nexport default ContactsFilter;\n","import { Toaster } from 'react-hot-toast';\nimport styled from '@emotion/styled';\nimport ContactsForm from './Components/ContactsForm/ContactsForm';\nimport ContactsList from './Components/ContactList/ContactsList';\nimport ContactsFilter from './Components/ContactsFilter/ContactsFilter';\n\nconst Wrapper = styled.div`\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport function App() {\n  return (\n    <Wrapper>\n      <Toaster />\n      <h1>Phonebook</h1>\n      <ContactsForm />\n      <h2>Contacts</h2>\n      <ContactsFilter />\n      <ContactsList />\n    </Wrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './phoonebook-actions';\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport PhoneBookReducer from './phonebook/phonebook-reducer';\r\nimport { contactsApi } from './ContactSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    phoneBook: PhoneBookReducer,\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n  },\r\n  middleware: getDefaultMiddleware => [\r\n    ...getDefaultMiddleware(),\r\n    contactsApi.middleware,\r\n  ],\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './redux/store';\n// import { PersistGate } from 'redux-persist/lib/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}